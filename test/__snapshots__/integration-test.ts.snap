// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`integration async fs enabled: false API:Chain support addon ordering 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "addon1",
      "root": "node_modules/addon1",
      "version": null,
    },
    Object {
      "name": "addon2",
      "root": "node_modules/addon2",
      "version": null,
    },
    Object {
      "name": "addon3",
      "root": "node_modules/addon3",
      "version": null,
    },
    Object {
      "name": "addon4",
      "root": "node_modules/addon4",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "dory": Array [
        "app/components/dory/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "a = undefined",
      "kind": 10,
      "label": "this.a_addon2__addon1__addon4__addon3_",
      "textEdit": Object {
        "newText": "this.a_addon2__addon1__addon4__addon3_",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to load API from project itself project custom completion:template 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "label": "this.name",
      "textEdit": Object {
        "newText": "this.name",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide API:Completion support dummy addon completion:script 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "label": "name",
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide API:Completion support dummy addon completion:template 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "label": "this.name",
      "textEdit": Object {
        "newText": "this.name",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide API:Definition support dummy addon definition:script 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.js",
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide API:Definition support dummy addon definition:template 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide API:Hover support dummy addon hover:template 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Object {
    "contents": "foo",
    "range": Object {
      "end": Object {
        "character": 0,
        "line": 0,
      },
      "start": Object {
        "character": 0,
        "line": 0,
      },
    },
  },
}
`;

exports[`integration async fs enabled: false Able to provide API:Reference support dummy addon reference:template 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for angle component arguments names support template-only collocated components arguments extraction 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
      "my-bar": Array [
        "app/components/my-bar.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "@foo = undefined // (used in template)",
      "kind": 10,
      "label": "@foo",
      "textEdit": Object {
        "newText": "@foo",
        "range": Object {
          "end": Object {
            "character": 18,
            "line": 0,
          },
          "start": Object {
            "character": 17,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "@name = undefined // (used in template)",
      "kind": 10,
      "label": "@name",
      "textEdit": Object {
        "newText": "@name",
        "range": Object {
          "end": Object {
            "character": 18,
            "line": 0,
          },
          "start": Object {
            "character": 17,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "@picture = undefined // (used in template)",
      "kind": 10,
      "label": "@picture",
      "textEdit": Object {
        "newText": "@picture",
        "range": Object {
          "end": Object {
            "character": 18,
            "line": 0,
          },
          "start": Object {
            "character": 17,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for each attributes autocomplete key argument 1`] = `
Array [
  Object {
    "documentation": "
The \`key\` option is used to tell Ember how to determine if the items in the
array being iterated over with \`{{#each}}\` has changed between renders. By
default the item's object identity is used.
",
    "kind": 10,
    "label": "key",
    "textEdit": Object {
      "newText": "key",
      "range": Object {
        "end": Object {
          "character": 9,
          "line": 0,
        },
        "start": Object {
          "character": 9,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for each attributes autocomplete key argument values 1`] = `
Array [
  Object {
    "documentation": "The index of the item in the array.",
    "kind": 12,
    "label": "@identity",
    "textEdit": Object {
      "newText": "@identity",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "documentation": "The item in the array itself.",
    "kind": 12,
    "label": "@index",
    "textEdit": Object {
      "newText": "@index",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for element attributes support ...attributes autocomplete 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "documentation": "
In general, you should place ...attributes after any attributes you specify to give people using your component an opportunity to override your attribute.
If ...attributes appears after an attribute, it overrides that attribute.
If it appears before an attribute, it does not.
Place ...attributes before your attributes only if you want to disallow tags from overriding your attributes.
This is likely to be unusual.
In addition, the class attribute is special, and will be merged with any existing classes on the element rather than overwriting them.
This allows you to progressively add CSS classes to your components, and makes them more flexible overall.
",
      "kind": 10,
      "label": "...attributes",
      "textEdit": Object {
        "newText": "...attributes",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for local context access support child project addon calling parent project addon 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "biz",
      "root": "lib/biz",
      "version": 1,
    },
    Object {
      "name": "foo",
      "root": "../lib/foo",
      "version": 1,
    },
  ],
  "registry": Object {
    "component": Object {
      "bar": Array [
        "lib/biz/addon/templates/components/bar.hbs",
        "../lib/foo/addon/templates/components/bar.hbs",
        "../lib/foo/app/components/bar.js",
      ],
    },
    "routePath": Object {
      "hello": Array [
        "app/templates/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Foo$Bar",
      "textEdit": Object {
        "newText": "Foo$Bar",
        "range": Object {
          "end": Object {
            "character": 2,
            "line": 0,
          },
          "start": Object {
            "character": 1,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for local context access support collocated components 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "lastName = \\"b\\"",
      "kind": 10,
      "label": "this.lastName",
      "textEdit": Object {
        "newText": "this.lastName",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "firstName = \\"a\\"",
      "kind": 10,
      "label": "this.firstName",
      "textEdit": Object {
        "newText": "this.firstName",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for local context access support collocated components in mustache arguments 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "lastName = \\"b\\"",
      "kind": 10,
      "label": "this.lastName",
      "textEdit": Object {
        "newText": "this.lastName",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 6,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "firstName = \\"a\\"",
      "kind": 10,
      "label": "this.firstName",
      "textEdit": Object {
        "newText": "this.firstName",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 6,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for local context access support collocated components in node attributes 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "lastName = \\"b\\"",
      "kind": 10,
      "label": "this.lastName",
      "textEdit": Object {
        "newText": "this.lastName",
        "range": Object {
          "end": Object {
            "character": 17,
            "line": 0,
          },
          "start": Object {
            "character": 12,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "firstName = \\"a\\"",
      "kind": 10,
      "label": "this.firstName",
      "textEdit": Object {
        "newText": "this.firstName",
        "range": Object {
          "end": Object {
            "character": 17,
            "line": 0,
          },
          "start": Object {
            "character": 12,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for local scoped params support component name autocomplete from block params 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "data": Object {
        "files": Array [
          "app/components/foo.hbs",
        ],
      },
      "detail": "component",
      "kind": 7,
      "label": "Foo",
      "textEdit": Object {
        "newText": "Foo",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "kind": 6,
      "label": "boo",
      "textEdit": Object {
        "newText": "boo",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from {{#my-component as |...|}}",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component [\\"bar\\"]",
      "kind": 6,
      "label": "boo.Moo",
      "textEdit": Object {
        "newText": "boo.Moo",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component \\"my-component\\"",
      "kind": 6,
      "label": "boo.Foo",
      "textEdit": Object {
        "newText": "boo.Foo",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "helper \\"uppercase\\"",
      "kind": 6,
      "label": "boo.baz",
      "textEdit": Object {
        "newText": "boo.baz",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "modifier \\"my-modifier\\"",
      "kind": 6,
      "label": "boo.editor",
      "textEdit": Object {
        "newText": "boo.editor",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for local scoped params support mustache blocks 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Positional param from {{#my-component as |...|}}",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unbound",
      "textEdit": Object {
        "newText": "unbound",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "debugger",
      "textEdit": Object {
        "newText": "debugger",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
      ],
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for local scoped params support tag blocks 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component [\\"bar\\"]",
      "kind": 6,
      "label": "bar.Moo",
      "textEdit": Object {
        "newText": "bar.Moo",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component \\"my-component\\"",
      "kind": 6,
      "label": "bar.Foo",
      "textEdit": Object {
        "newText": "bar.Foo",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "helper \\"uppercase\\"",
      "kind": 6,
      "label": "bar.baz",
      "textEdit": Object {
        "newText": "bar.baz",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "modifier \\"my-modifier\\"",
      "kind": 6,
      "label": "bar.editor",
      "textEdit": Object {
        "newText": "bar.editor",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unbound",
      "textEdit": Object {
        "newText": "unbound",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "debugger",
      "textEdit": Object {
        "newText": "debugger",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
      ],
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for local scoped params support tag blocks and yielded context 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
      "my-component": Array [
        "app/components/my-component.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component \\"my-component\\"",
      "kind": 6,
      "label": "bar.Foo",
      "textEdit": Object {
        "newText": "bar.Foo",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component \\"super-puper\\"",
      "kind": 6,
      "label": "bar.Bar",
      "textEdit": Object {
        "newText": "bar.Bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unbound",
      "textEdit": Object {
        "newText": "unbound",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "debugger",
      "textEdit": Object {
        "newText": "debugger",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
      ],
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for on modifier argument provide correct autocomplete values for RandomComponent element 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Event for <Rnd>",
      "kind": 23,
      "label": "click",
      "textEdit": Object {
        "newText": "click",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <Rnd>",
      "kind": 23,
      "label": "mousedown",
      "textEdit": Object {
        "newText": "mousedown",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <Rnd>",
      "kind": 23,
      "label": "mouseup",
      "textEdit": Object {
        "newText": "mouseup",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <Rnd>",
      "kind": 23,
      "label": "mouseenter",
      "textEdit": Object {
        "newText": "mouseenter",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <Rnd>",
      "kind": 23,
      "label": "mouseleave",
      "textEdit": Object {
        "newText": "mouseleave",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for on modifier argument provide correct autocomplete values for button element 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Event for <select>",
      "kind": 23,
      "label": "change",
      "textEdit": Object {
        "newText": "change",
        "range": Object {
          "end": Object {
            "character": 14,
            "line": 0,
          },
          "start": Object {
            "character": 14,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <select>",
      "kind": 23,
      "label": "focus",
      "textEdit": Object {
        "newText": "focus",
        "range": Object {
          "end": Object {
            "character": 14,
            "line": 0,
          },
          "start": Object {
            "character": 14,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <select>",
      "kind": 23,
      "label": "blur",
      "textEdit": Object {
        "newText": "blur",
        "range": Object {
          "end": Object {
            "character": 14,
            "line": 0,
          },
          "start": Object {
            "character": 14,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to provide autocomplete information for on modifier argument provide correct autocomplete values for div element 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Event for <div>",
      "kind": 23,
      "label": "click",
      "textEdit": Object {
        "newText": "click",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <div>",
      "kind": 23,
      "label": "mousedown",
      "textEdit": Object {
        "newText": "mousedown",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <div>",
      "kind": 23,
      "label": "mouseup",
      "textEdit": Object {
        "newText": "mouseup",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <div>",
      "kind": 23,
      "label": "mouseenter",
      "textEdit": Object {
        "newText": "mouseenter",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <div>",
      "kind": 23,
      "label": "mouseleave",
      "textEdit": Object {
        "newText": "mouseleave",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to use classes for API support dummy class-based addon definition:template 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Able to use classes for API support dummy class-based addon definition:template with correctly binded context 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Autocomplete works for broken templates autocomplete information for component #1 {{ 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/components/hello.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "hello",
    "textEdit": Object {
      "newText": "hello",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "data": Object {
      "files": Array [
        "app/components/darling.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "darling",
    "textEdit": Object {
      "newText": "darling",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Ember",
    "kind": 7,
    "label": "input",
    "textEdit": Object {
      "newText": "input",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 7,
    "label": "link-to",
    "textEdit": Object {
      "newText": "link-to",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 7,
    "label": "textarea",
    "textEdit": Object {
      "newText": "textarea",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
    ],
  },
]
`;

exports[`integration async fs enabled: false Autocomplete works for broken templates autocomplete information for component #1 {{ 2`] = `
Object {
  "component": Object {
    "darling": Array [
      "app/components/darling.hbs",
    ],
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
}
`;

exports[`integration async fs enabled: false Autocomplete works for broken templates autocomplete information for component #2 < 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/components/hello.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "Hello",
    "textEdit": Object {
      "newText": "Hello",
      "range": Object {
        "end": Object {
          "character": 1,
          "line": 1,
        },
        "start": Object {
          "character": 1,
          "line": 1,
        },
      },
    },
  },
  Object {
    "data": Object {
      "files": Array [
        "app/components/darling.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "Darling",
    "textEdit": Object {
      "newText": "Darling",
      "range": Object {
        "end": Object {
          "character": 1,
          "line": 1,
        },
        "start": Object {
          "character": 1,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: false Autocomplete works for broken templates autocomplete information for component #2 < 2`] = `
Object {
  "component": Object {
    "darling": Array [
      "app/components/darling.hbs",
    ],
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
}
`;

exports[`integration async fs enabled: false Autocomplete works for broken templates autocomplete information for component #3 {{# 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Ember 1.11.0",
      "kind": 3,
      "label": "component",
      "textEdit": Object {
        "newText": "component}}
  
{{/component}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
        "MustachePath",
        "SubExpressionPath",
      ],
      "version": "1.11.0",
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "each",
      "textEdit": Object {
        "newText": "each}}
  
{{/each}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "detail": "Ember 2.1.0",
      "kind": 3,
      "label": "each-in",
      "textEdit": Object {
        "newText": "each-in}}
  
{{/each-in}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
      "version": "2.1.0",
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "in-element",
      "textEdit": Object {
        "newText": "in-element}}
  
{{/in-element}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "let",
      "textEdit": Object {
        "newText": "let}}
  
{{/let}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "if",
      "textEdit": Object {
        "newText": "if}}
  
{{/if}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unless",
      "textEdit": Object {
        "newText": "unless}}
  
{{/unless}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "with",
      "textEdit": Object {
        "newText": "with}}
  
{{/with}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "data": Object {
        "files": Array [
          "app/components/hello.hbs",
        ],
      },
      "detail": "component",
      "kind": 7,
      "label": "hello",
      "textEdit": Object {
        "newText": "hello}}
  
{{/hello}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
    },
    Object {
      "data": Object {
        "files": Array [
          "app/components/darling.hbs",
        ],
      },
      "detail": "component",
      "kind": 7,
      "label": "darling",
      "textEdit": Object {
        "newText": "darling}}
  
{{/darling}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Autocomplete works for broken templates autocomplete information for helper #5 {{name ( 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/helpers/boo.js",
      ],
    },
    "detail": "helper",
    "kind": 3,
    "label": "boo",
    "textEdit": Object {
      "newText": "boo",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "action",
    "textEdit": Object {
      "newText": "action",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember 1.11.0",
    "kind": 3,
    "label": "component",
    "textEdit": Object {
      "newText": "component",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.11.0",
  },
  Object {
    "detail": "Ember 1.13.0",
    "kind": 3,
    "label": "concat",
    "textEdit": Object {
      "newText": "concat",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.13.0",
  },
  Object {
    "detail": "Ember 2.1.0",
    "kind": 3,
    "label": "get",
    "textEdit": Object {
      "newText": "get",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "2.1.0",
  },
  Object {
    "detail": "Ember 3.12.0",
    "kind": 3,
    "label": "fn",
    "textEdit": Object {
      "newText": "fn",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "3.12.0",
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "hash",
    "textEdit": Object {
      "newText": "hash",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "has-block",
    "textEdit": Object {
      "newText": "has-block",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "has-block-params",
    "textEdit": Object {
      "newText": "has-block-params",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "if",
    "textEdit": Object {
      "newText": "if",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "loc",
    "textEdit": Object {
      "newText": "loc",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "mut",
    "textEdit": Object {
      "newText": "mut",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "query-params",
    "textEdit": Object {
      "newText": "query-params",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unbound",
    "textEdit": Object {
      "newText": "unbound",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unless",
    "textEdit": Object {
      "newText": "unless",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember 3.27.0",
    "kind": 3,
    "label": "helper",
    "textEdit": Object {
      "newText": "helper",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
      "MustachePath",
    ],
    "version": "3.27.0",
  },
  Object {
    "detail": "Ember 3.27.0",
    "kind": 3,
    "label": "modifier",
    "textEdit": Object {
      "newText": "modifier",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
      "MustachePath",
      "ModifierPath",
    ],
    "version": "3.27.0",
  },
]
`;

exports[`integration async fs enabled: false Autocomplete works for broken templates autocomplete information for helper #5 {{name ( 2`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
  "helper": Object {
    "boo": Array [
      "app/helpers/boo.js",
    ],
  },
}
`;

exports[`integration async fs enabled: false Autocomplete works for broken templates autocomplete information for helper #6 {{name (foo ( 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/helpers/boo.js",
      ],
    },
    "detail": "helper",
    "kind": 3,
    "label": "boo",
    "textEdit": Object {
      "newText": "boo",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "action",
    "textEdit": Object {
      "newText": "action",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember 1.11.0",
    "kind": 3,
    "label": "component",
    "textEdit": Object {
      "newText": "component",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.11.0",
  },
  Object {
    "detail": "Ember 1.13.0",
    "kind": 3,
    "label": "concat",
    "textEdit": Object {
      "newText": "concat",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.13.0",
  },
  Object {
    "detail": "Ember 2.1.0",
    "kind": 3,
    "label": "get",
    "textEdit": Object {
      "newText": "get",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "2.1.0",
  },
  Object {
    "detail": "Ember 3.12.0",
    "kind": 3,
    "label": "fn",
    "textEdit": Object {
      "newText": "fn",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "3.12.0",
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "hash",
    "textEdit": Object {
      "newText": "hash",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "has-block",
    "textEdit": Object {
      "newText": "has-block",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "has-block-params",
    "textEdit": Object {
      "newText": "has-block-params",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "if",
    "textEdit": Object {
      "newText": "if",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "loc",
    "textEdit": Object {
      "newText": "loc",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "mut",
    "textEdit": Object {
      "newText": "mut",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "query-params",
    "textEdit": Object {
      "newText": "query-params",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unbound",
    "textEdit": Object {
      "newText": "unbound",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unless",
    "textEdit": Object {
      "newText": "unless",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember 3.27.0",
    "kind": 3,
    "label": "helper",
    "textEdit": Object {
      "newText": "helper",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
      "MustachePath",
    ],
    "version": "3.27.0",
  },
  Object {
    "detail": "Ember 3.27.0",
    "kind": 3,
    "label": "modifier",
    "textEdit": Object {
      "newText": "modifier",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
      "MustachePath",
      "ModifierPath",
    ],
    "version": "3.27.0",
  },
]
`;

exports[`integration async fs enabled: false Autocomplete works for broken templates autocomplete information for helper #6 {{name (foo ( 2`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
  "helper": Object {
    "boo": Array [
      "app/helpers/boo.js",
    ],
  },
}
`;

exports[`integration async fs enabled: false Autocomplete works for broken templates autocomplete information for modifier #4 <Foo {{ 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
    "modifier": Object {
      "boo": Array [
        "app/modifiers/boo.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "on",
      "textEdit": Object {
        "newText": "on",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
      "usableIn": Array [
        "ModifierPath",
      ],
    },
    Object {
      "detail": "Ember 3.27.0",
      "kind": 3,
      "label": "modifier",
      "textEdit": Object {
        "newText": "modifier",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
      "usableIn": Array [
        "SubExpressionPath",
        "MustachePath",
        "ModifierPath",
      ],
      "version": "3.27.0",
    },
    Object {
      "data": Object {
        "files": Array [
          "app/modifiers/boo.js",
        ],
      },
      "detail": "modifier",
      "kind": 3,
      "label": "boo",
      "textEdit": Object {
        "newText": "boo",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "modifier",
      "kind": 2,
      "label": "action",
      "textEdit": Object {
        "newText": "action",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Autocomplete works in LinkTo components for @route argument able to autocomplete basic routes 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
    "routePath": Object {
      "foo.bar.baz": Array [
        "app/templates/foo/bar/baz.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "route",
      "kind": 17,
      "label": "foo.bar.baz",
      "textEdit": Object {
        "newText": "foo.bar.baz",
        "range": Object {
          "end": Object {
            "character": 16,
            "line": 0,
          },
          "start": Object {
            "character": 16,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: false Diffent commands handle "els.getLegacyTemplateTokens" command 1`] = `
Object {
  "component": Object {
    "hello": Object {
      "source": "app/components/hello/index.hbs",
      "tokens": Array [
        "foo",
        "my-component",
        "another/my/component",
      ],
    },
  },
  "routePath": Object {},
}
`;

exports[`integration async fs enabled: false Diffent commands handle "els.getProjectRegistry" command 1`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello/index.hbs",
      "app/components/hello/index.js",
      "tests/integration/components/hello-test.js",
    ],
  },
}
`;

exports[`integration async fs enabled: false Diffent commands handle "els.getRelatedFiles" command 1`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello/component.js",
      "app/components/hello/template.hbs",
      "tests/integration/components/hello-test.js",
    ],
  },
}
`;

exports[`integration async fs enabled: false Diffent commands handle "els.getRelatedFiles" command 2`] = `
Array [
  "app/components/hello/component.js",
  "app/components/hello/template.hbs",
  "tests/integration/components/hello-test.js",
]
`;

exports[`integration async fs enabled: false Diffent commands handle "els.getRelatedFiles" command with meta flag 1`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello/index.hbs",
      "app/components/hello/index.js",
      "tests/integration/components/hello-test.js",
    ],
  },
}
`;

exports[`integration async fs enabled: false Diffent commands handle "els.getRelatedFiles" command with meta flag 2`] = `
Array [
  Object {
    "meta": Object {
      "kind": "template",
      "name": "hello",
      "scope": "application",
      "type": "component",
    },
    "path": "app/components/hello/index.hbs",
  },
  Object {
    "meta": Object {
      "kind": "script",
      "name": "hello",
      "scope": "application",
      "type": "component",
    },
    "path": "app/components/hello/index.js",
  },
  Object {
    "meta": Object {
      "kind": "test",
      "name": "hello",
      "scope": "application",
      "type": "component",
    },
    "path": "tests/integration/components/hello-test.js",
  },
]
`;

exports[`integration async fs enabled: false DocumentSymbolProvider able to provide symbols for script document 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.js",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration async fs enabled: false DocumentSymbolProvider able to provide symbols for template document 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration async fs enabled: false DocumentSymbolProvider stable if ast broken in script document 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.js",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration async fs enabled: false DocumentSymbolProvider stable if ast broken in template document 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases go to component from typescripted inline template 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/templates/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.ts",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/components/darling.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases go to definition from app to in repo addon 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "biz",
      "root": "lib/biz",
      "version": 1,
    },
  ],
  "registry": Object {
    "component": Object {
      "bar": Array [
        "lib/biz/addon/components/bar.js",
      ],
      "darling": Array [
        "app/components/darling/index.js",
      ],
      "hello": Array [
        "app/components/hello.js",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/lib/biz/addon/components/bar.js",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases go to definition from app to nested utils location of in repo addon 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "biz",
      "root": "lib/biz",
      "version": 1,
    },
  ],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling/index.js",
      ],
      "hello": Array [
        "app/components/hello.js",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/lib/biz/addon/utils/boo/blah/zoo/bar.js",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases go to definition from handlebars template working if we have test for component 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.ts",
        "tests/integration/components/darling/component-test.js",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling.ts",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases go to definition from script template working if we have test for component 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.ts",
        "tests/integration/components/darling/component-test.js",
      ],
      "hello": Array [
        "app/components/hello.ts",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling.ts",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases go to local template-only component 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases go to local template-only component in module 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling/index.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling/index.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases go to local template-only component in pod-like 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling/template.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling/template.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases go to local template-only component in templates dir 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/templates/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/components/darling.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases go to route definition from LinkTo component 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
    "routePath": Object {
      "foo.bar.baz": Array [
        "app/templates/foo/bar/baz.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo/bar/baz.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases to children route from application outlet 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "routePath": Object {
      "application": Array [
        "app/templates/application.hbs",
      ],
      "foo": Array [
        "app/templates/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Go to definition works for all supported cases to children route from meaningful outlet 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "routePath": Object {
      "foo": Array [
        "app/templates/foo.hbs",
      ],
      "foo.bar": Array [
        "app/templates/foo/bar.hbs",
      ],
      "foo.baz": Array [
        "app/templates/foo/baz.hbs",
      ],
      "foo.boo.bax": Array [
        "app/templates/foo/boo/bax.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo/bar.hbs",
    },
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo/baz.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: false Initialize request returns an initialize request 1`] = `
Object {
  "capabilities": Object {
    "codeActionProvider": true,
    "completionProvider": Object {
      "resolveProvider": true,
      "triggerCharacters": Array [
        ".",
        ":",
        "$",
        "=",
        "/",
        "{",
        "(",
        "<",
        "@",
        "\\"",
        "'",
        "#",
      ],
    },
    "definitionProvider": true,
    "documentSymbolProvider": true,
    "executeCommandProvider": Object {
      "commands": Array [
        "els.registerProjectPath",
        "els.provideDiagnostics",
        "els.extractSourceCodeToComponent",
        "els.executeInEmberCLI",
        "els.getRelatedFiles",
        "els.getKindUsages",
        "els.setConfig",
        "els.reloadProject",
      ],
    },
    "foldingRangeProvider": true,
    "hoverProvider": true,
    "referencesProvider": true,
    "textDocumentSync": 1,
    "workspace": Object {
      "workspaceFolders": Object {
        "changeNotifications": true,
        "supported": true,
      },
    },
  },
  "serverInfo": Object {
    "name": "@ember-tooling/ember-language-server",
  },
}
`;

exports[`integration async fs enabled: false Project class resolution, based on fs path and file structure support parent project addon calling child project 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "biz",
      "root": "lib/biz",
      "version": 1,
    },
    Object {
      "name": "foo",
      "root": "../lib/foo",
      "version": 1,
    },
  ],
  "registry": Object {
    "component": Object {
      "bar": Array [
        "lib/biz/addon/components/bar.js",
        "../lib/foo/addon/components/bar.js",
      ],
    },
    "helper": Object {
      "blah": Array [
        "tests/helpers/blah.js",
      ],
    },
    "routePath": Object {
      "hello": Array [
        "app/templates/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/tests/helpers/blah.js",
    },
  ],
}
`;

exports[`integration async fs enabled: false Project class resolution, based on fs path and file structure without ignoring main project returns one only top level result 1`] = `
Array [
  Object {
    "addonsMeta": Array [],
    "registry": Object {
      "component": Object {
        "item": Array [
          "addon/components/item.hbs",
        ],
      },
    },
    "response": Array [
      Object {
        "data": Object {
          "files": Array [
            "../addon/components/item.hbs",
          ],
        },
        "detail": "component",
        "kind": 7,
        "label": "Item",
        "textEdit": Object {
          "newText": "Item",
          "range": Object {
            "end": Object {
              "character": 1,
              "line": 0,
            },
            "start": Object {
              "character": 1,
              "line": 0,
            },
          },
        },
      },
    ],
  },
  Object {
    "addonsMeta": Array [
      Object {
        "name": "my-addon",
        "root": "../lib",
        "version": 1,
      },
    ],
    "registry": Object {
      "component": Object {
        "bar": Array [
          "app/components/bar.hbs",
        ],
        "foo": Array [
          "app/components/foo.hbs",
        ],
        "item": Array [
          "../lib/addon/components/item.hbs",
        ],
      },
    },
    "response": Array [
      Object {
        "data": Object {
          "files": Array [
            "../addon/components/item.hbs",
          ],
        },
        "detail": "component",
        "kind": 7,
        "label": "Item",
        "textEdit": Object {
          "newText": "Item",
          "range": Object {
            "end": Object {
              "character": 1,
              "line": 0,
            },
            "start": Object {
              "character": 1,
              "line": 0,
            },
          },
        },
      },
    ],
  },
]
`;

exports[`integration async fs enabled: false Special helpers autocomplete autocomplete component in subExpression 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/components/foo.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "foo",
    "textEdit": Object {
      "newText": "foo",
      "range": Object {
        "end": Object {
          "character": 20,
          "line": 0,
        },
        "start": Object {
          "character": 20,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: false Special helpers autocomplete autocomplete helpers in subExpression 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/helpers/my-helper.js",
      ],
    },
    "detail": "helper",
    "kind": 3,
    "label": "my-helper",
    "textEdit": Object {
      "newText": "my-helper",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 0,
        },
        "start": Object {
          "character": 17,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: false Special helpers autocomplete autocomplete modifier in subExpression 1`] = `
Array [
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "on",
    "textEdit": Object {
      "newText": "on",
      "range": Object {
        "end": Object {
          "character": 19,
          "line": 0,
        },
        "start": Object {
          "character": 19,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "ModifierPath",
    ],
  },
  Object {
    "detail": "modifier",
    "kind": 2,
    "label": "action",
    "textEdit": Object {
      "newText": "action",
      "range": Object {
        "end": Object {
          "character": 19,
          "line": 0,
        },
        "start": Object {
          "character": 19,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: false autocomplete includes yielded blocks in angle component completions 1`] = `
Array [
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":main",
    "textEdit": Object {
      "newText": ":main",
      "range": Object {
        "end": Object {
          "character": 10,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "data": Object {
      "files": Array [
        "app/components/hello.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "Hello",
    "textEdit": Object {
      "newText": "Hello",
      "range": Object {
        "end": Object {
          "character": 10,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "data": Object {
      "files": Array [
        "app/components/darling.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "Darling",
    "textEdit": Object {
      "newText": "Darling",
      "range": Object {
        "end": Object {
          "character": 10,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "data": Object {
      "files": Array [
        "app/components/world.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "World",
    "textEdit": Object {
      "newText": "World",
      "range": Object {
        "end": Object {
          "character": 10,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: false autocomplete works for angle component yielded blocks 1`] = `
Array [
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":main",
    "textEdit": Object {
      "newText": ":main",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: false autocomplete works for multiple angle component yielded blocks 1`] = `
Array [
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":main",
    "textEdit": Object {
      "newText": ":main",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":body",
    "textEdit": Object {
      "newText": ":body",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":footer",
    "textEdit": Object {
      "newText": ":footer",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: true API:Chain support addon ordering 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "addon1",
      "root": "node_modules/addon1",
      "version": null,
    },
    Object {
      "name": "addon2",
      "root": "node_modules/addon2",
      "version": null,
    },
    Object {
      "name": "addon3",
      "root": "node_modules/addon3",
      "version": null,
    },
    Object {
      "name": "addon4",
      "root": "node_modules/addon4",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "dory": Array [
        "app/components/dory/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "a = undefined",
      "kind": 10,
      "label": "this.a_addon2__addon1__addon4__addon3_",
      "textEdit": Object {
        "newText": "this.a_addon2__addon1__addon4__addon3_",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to load API from project itself project custom completion:template 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "label": "this.name",
      "textEdit": Object {
        "newText": "this.name",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide API:Completion support dummy addon completion:script 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "label": "name",
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide API:Completion support dummy addon completion:template 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "label": "this.name",
      "textEdit": Object {
        "newText": "this.name",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide API:Definition support dummy addon definition:script 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.js",
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide API:Definition support dummy addon definition:template 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide API:Hover support dummy addon hover:template 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Object {
    "contents": "foo",
    "range": Object {
      "end": Object {
        "character": 0,
        "line": 0,
      },
      "start": Object {
        "character": 0,
        "line": 0,
      },
    },
  },
}
`;

exports[`integration async fs enabled: true Able to provide API:Reference support dummy addon reference:template 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for angle component arguments names support template-only collocated components arguments extraction 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
      "my-bar": Array [
        "app/components/my-bar.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "@foo = undefined // (used in template)",
      "kind": 10,
      "label": "@foo",
      "textEdit": Object {
        "newText": "@foo",
        "range": Object {
          "end": Object {
            "character": 18,
            "line": 0,
          },
          "start": Object {
            "character": 17,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "@name = undefined // (used in template)",
      "kind": 10,
      "label": "@name",
      "textEdit": Object {
        "newText": "@name",
        "range": Object {
          "end": Object {
            "character": 18,
            "line": 0,
          },
          "start": Object {
            "character": 17,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "@picture = undefined // (used in template)",
      "kind": 10,
      "label": "@picture",
      "textEdit": Object {
        "newText": "@picture",
        "range": Object {
          "end": Object {
            "character": 18,
            "line": 0,
          },
          "start": Object {
            "character": 17,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for each attributes autocomplete key argument 1`] = `
Array [
  Object {
    "documentation": "
The \`key\` option is used to tell Ember how to determine if the items in the
array being iterated over with \`{{#each}}\` has changed between renders. By
default the item's object identity is used.
",
    "kind": 10,
    "label": "key",
    "textEdit": Object {
      "newText": "key",
      "range": Object {
        "end": Object {
          "character": 9,
          "line": 0,
        },
        "start": Object {
          "character": 9,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for each attributes autocomplete key argument values 1`] = `
Array [
  Object {
    "documentation": "The index of the item in the array.",
    "kind": 12,
    "label": "@identity",
    "textEdit": Object {
      "newText": "@identity",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "documentation": "The item in the array itself.",
    "kind": 12,
    "label": "@index",
    "textEdit": Object {
      "newText": "@index",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for element attributes support ...attributes autocomplete 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "documentation": "
In general, you should place ...attributes after any attributes you specify to give people using your component an opportunity to override your attribute.
If ...attributes appears after an attribute, it overrides that attribute.
If it appears before an attribute, it does not.
Place ...attributes before your attributes only if you want to disallow tags from overriding your attributes.
This is likely to be unusual.
In addition, the class attribute is special, and will be merged with any existing classes on the element rather than overwriting them.
This allows you to progressively add CSS classes to your components, and makes them more flexible overall.
",
      "kind": 10,
      "label": "...attributes",
      "textEdit": Object {
        "newText": "...attributes",
        "range": Object {
          "end": Object {
            "character": 8,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for local context access support child project addon calling parent project addon 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "biz",
      "root": "lib/biz",
      "version": 1,
    },
    Object {
      "name": "foo",
      "root": "../lib/foo",
      "version": 1,
    },
  ],
  "registry": Object {
    "component": Object {
      "bar": Array [
        "lib/biz/addon/templates/components/bar.hbs",
        "../lib/foo/addon/templates/components/bar.hbs",
        "../lib/foo/app/components/bar.js",
      ],
    },
    "routePath": Object {
      "hello": Array [
        "app/templates/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "component",
      "kind": 7,
      "label": "Foo$Bar",
      "textEdit": Object {
        "newText": "Foo$Bar",
        "range": Object {
          "end": Object {
            "character": 2,
            "line": 0,
          },
          "start": Object {
            "character": 1,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for local context access support collocated components 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "lastName = \\"b\\"",
      "kind": 10,
      "label": "this.lastName",
      "textEdit": Object {
        "newText": "this.lastName",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "firstName = \\"a\\"",
      "kind": 10,
      "label": "this.firstName",
      "textEdit": Object {
        "newText": "this.firstName",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 2,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for local context access support collocated components in mustache arguments 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "lastName = \\"b\\"",
      "kind": 10,
      "label": "this.lastName",
      "textEdit": Object {
        "newText": "this.lastName",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 6,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "firstName = \\"a\\"",
      "kind": 10,
      "label": "this.firstName",
      "textEdit": Object {
        "newText": "this.firstName",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 6,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for local context access support collocated components in node attributes 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
        "app/components/hello/index.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "lastName = \\"b\\"",
      "kind": 10,
      "label": "this.lastName",
      "textEdit": Object {
        "newText": "this.lastName",
        "range": Object {
          "end": Object {
            "character": 17,
            "line": 0,
          },
          "start": Object {
            "character": 12,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "firstName = \\"a\\"",
      "kind": 10,
      "label": "this.firstName",
      "textEdit": Object {
        "newText": "this.firstName",
        "range": Object {
          "end": Object {
            "character": 17,
            "line": 0,
          },
          "start": Object {
            "character": 12,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for local scoped params support component name autocomplete from block params 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "data": Object {
        "files": Array [
          "app/components/foo.hbs",
        ],
      },
      "detail": "component",
      "kind": 7,
      "label": "Foo",
      "textEdit": Object {
        "newText": "Foo",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "kind": 6,
      "label": "boo",
      "textEdit": Object {
        "newText": "boo",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from {{#my-component as |...|}}",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component [\\"bar\\"]",
      "kind": 6,
      "label": "boo.Moo",
      "textEdit": Object {
        "newText": "boo.Moo",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component \\"my-component\\"",
      "kind": 6,
      "label": "boo.Foo",
      "textEdit": Object {
        "newText": "boo.Foo",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "helper \\"uppercase\\"",
      "kind": 6,
      "label": "boo.baz",
      "textEdit": Object {
        "newText": "boo.baz",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "modifier \\"my-modifier\\"",
      "kind": 6,
      "label": "boo.editor",
      "textEdit": Object {
        "newText": "boo.editor",
        "range": Object {
          "end": Object {
            "character": 1,
            "line": 2,
          },
          "start": Object {
            "character": 1,
            "line": 2,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for local scoped params support mustache blocks 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Positional param from {{#my-component as |...|}}",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unbound",
      "textEdit": Object {
        "newText": "unbound",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "debugger",
      "textEdit": Object {
        "newText": "debugger",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
      ],
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for local scoped params support tag blocks 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component [\\"bar\\"]",
      "kind": 6,
      "label": "bar.Moo",
      "textEdit": Object {
        "newText": "bar.Moo",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component \\"my-component\\"",
      "kind": 6,
      "label": "bar.Foo",
      "textEdit": Object {
        "newText": "bar.Foo",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "helper \\"uppercase\\"",
      "kind": 6,
      "label": "bar.baz",
      "textEdit": Object {
        "newText": "bar.baz",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "modifier \\"my-modifier\\"",
      "kind": 6,
      "label": "bar.editor",
      "textEdit": Object {
        "newText": "bar.editor",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unbound",
      "textEdit": Object {
        "newText": "unbound",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "debugger",
      "textEdit": Object {
        "newText": "debugger",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
      ],
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for local scoped params support tag blocks and yielded context 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "foo": Array [
        "app/components/foo.hbs",
      ],
      "my-component": Array [
        "app/components/my-component.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "kind": 6,
      "label": "bar",
      "textEdit": Object {
        "newText": "bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component \\"my-component\\"",
      "kind": 6,
      "label": "bar.Foo",
      "textEdit": Object {
        "newText": "bar.Foo",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Positional param from <MyComponent as |...|>",
      "documentation": "component \\"super-puper\\"",
      "kind": 6,
      "label": "bar.Bar",
      "textEdit": Object {
        "newText": "bar.Bar",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unbound",
      "textEdit": Object {
        "newText": "unbound",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "debugger",
      "textEdit": Object {
        "newText": "debugger",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 2,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "MustachePath",
      ],
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for on modifier argument provide correct autocomplete values for RandomComponent element 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Event for <Rnd>",
      "kind": 23,
      "label": "click",
      "textEdit": Object {
        "newText": "click",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <Rnd>",
      "kind": 23,
      "label": "mousedown",
      "textEdit": Object {
        "newText": "mousedown",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <Rnd>",
      "kind": 23,
      "label": "mouseup",
      "textEdit": Object {
        "newText": "mouseup",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <Rnd>",
      "kind": 23,
      "label": "mouseenter",
      "textEdit": Object {
        "newText": "mouseenter",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <Rnd>",
      "kind": 23,
      "label": "mouseleave",
      "textEdit": Object {
        "newText": "mouseleave",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for on modifier argument provide correct autocomplete values for button element 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Event for <select>",
      "kind": 23,
      "label": "change",
      "textEdit": Object {
        "newText": "change",
        "range": Object {
          "end": Object {
            "character": 14,
            "line": 0,
          },
          "start": Object {
            "character": 14,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <select>",
      "kind": 23,
      "label": "focus",
      "textEdit": Object {
        "newText": "focus",
        "range": Object {
          "end": Object {
            "character": 14,
            "line": 0,
          },
          "start": Object {
            "character": 14,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <select>",
      "kind": 23,
      "label": "blur",
      "textEdit": Object {
        "newText": "blur",
        "range": Object {
          "end": Object {
            "character": 14,
            "line": 0,
          },
          "start": Object {
            "character": 14,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to provide autocomplete information for on modifier argument provide correct autocomplete values for div element 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Event for <div>",
      "kind": 23,
      "label": "click",
      "textEdit": Object {
        "newText": "click",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <div>",
      "kind": 23,
      "label": "mousedown",
      "textEdit": Object {
        "newText": "mousedown",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <div>",
      "kind": 23,
      "label": "mouseup",
      "textEdit": Object {
        "newText": "mouseup",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <div>",
      "kind": 23,
      "label": "mouseenter",
      "textEdit": Object {
        "newText": "mouseenter",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "Event for <div>",
      "kind": 23,
      "label": "mouseleave",
      "textEdit": Object {
        "newText": "mouseleave",
        "range": Object {
          "end": Object {
            "character": 11,
            "line": 0,
          },
          "start": Object {
            "character": 11,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to use classes for API support dummy class-based addon definition:template 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Able to use classes for API support dummy class-based addon definition:template with correctly binded context 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "provider",
      "root": "node_modules/provider",
      "version": null,
    },
  ],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello/index.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/hello/index.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Autocomplete works for broken templates autocomplete information for component #1 {{ 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/components/hello.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "hello",
    "textEdit": Object {
      "newText": "hello",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "data": Object {
      "files": Array [
        "app/components/darling.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "darling",
    "textEdit": Object {
      "newText": "darling",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
  },
  Object {
    "detail": "Ember",
    "kind": 7,
    "label": "input",
    "textEdit": Object {
      "newText": "input",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 7,
    "label": "link-to",
    "textEdit": Object {
      "newText": "link-to",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 7,
    "label": "textarea",
    "textEdit": Object {
      "newText": "textarea",
      "range": Object {
        "end": Object {
          "character": 2,
          "line": 1,
        },
        "start": Object {
          "character": 2,
          "line": 1,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
    ],
  },
]
`;

exports[`integration async fs enabled: true Autocomplete works for broken templates autocomplete information for component #1 {{ 2`] = `
Object {
  "component": Object {
    "darling": Array [
      "app/components/darling.hbs",
    ],
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
}
`;

exports[`integration async fs enabled: true Autocomplete works for broken templates autocomplete information for component #2 < 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/components/hello.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "Hello",
    "textEdit": Object {
      "newText": "Hello",
      "range": Object {
        "end": Object {
          "character": 1,
          "line": 1,
        },
        "start": Object {
          "character": 1,
          "line": 1,
        },
      },
    },
  },
  Object {
    "data": Object {
      "files": Array [
        "app/components/darling.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "Darling",
    "textEdit": Object {
      "newText": "Darling",
      "range": Object {
        "end": Object {
          "character": 1,
          "line": 1,
        },
        "start": Object {
          "character": 1,
          "line": 1,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: true Autocomplete works for broken templates autocomplete information for component #2 < 2`] = `
Object {
  "component": Object {
    "darling": Array [
      "app/components/darling.hbs",
    ],
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
}
`;

exports[`integration async fs enabled: true Autocomplete works for broken templates autocomplete information for component #3 {{# 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Ember 1.11.0",
      "kind": 3,
      "label": "component",
      "textEdit": Object {
        "newText": "component}}
  
{{/component}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
        "MustachePath",
        "SubExpressionPath",
      ],
      "version": "1.11.0",
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "each",
      "textEdit": Object {
        "newText": "each}}
  
{{/each}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "detail": "Ember 2.1.0",
      "kind": 3,
      "label": "each-in",
      "textEdit": Object {
        "newText": "each-in}}
  
{{/each-in}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
      "version": "2.1.0",
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "in-element",
      "textEdit": Object {
        "newText": "in-element}}
  
{{/in-element}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "let",
      "textEdit": Object {
        "newText": "let}}
  
{{/let}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "if",
      "textEdit": Object {
        "newText": "if}}
  
{{/if}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "unless",
      "textEdit": Object {
        "newText": "unless}}
  
{{/unless}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
        "MustachePath",
        "SubExpressionPath",
      ],
    },
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "with",
      "textEdit": Object {
        "newText": "with}}
  
{{/with}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
      "usableIn": Array [
        "BlockPath",
      ],
    },
    Object {
      "data": Object {
        "files": Array [
          "app/components/hello.hbs",
        ],
      },
      "detail": "component",
      "kind": 7,
      "label": "hello",
      "textEdit": Object {
        "newText": "hello}}
  
{{/hello}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
    },
    Object {
      "data": Object {
        "files": Array [
          "app/components/darling.hbs",
        ],
      },
      "detail": "component",
      "kind": 7,
      "label": "darling",
      "textEdit": Object {
        "newText": "darling}}
  
{{/darling}}",
        "range": Object {
          "end": Object {
            "character": 3,
            "line": 1,
          },
          "start": Object {
            "character": 3,
            "line": 1,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Autocomplete works for broken templates autocomplete information for helper #5 {{name ( 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/helpers/boo.js",
      ],
    },
    "detail": "helper",
    "kind": 3,
    "label": "boo",
    "textEdit": Object {
      "newText": "boo",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "action",
    "textEdit": Object {
      "newText": "action",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember 1.11.0",
    "kind": 3,
    "label": "component",
    "textEdit": Object {
      "newText": "component",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.11.0",
  },
  Object {
    "detail": "Ember 1.13.0",
    "kind": 3,
    "label": "concat",
    "textEdit": Object {
      "newText": "concat",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.13.0",
  },
  Object {
    "detail": "Ember 2.1.0",
    "kind": 3,
    "label": "get",
    "textEdit": Object {
      "newText": "get",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "2.1.0",
  },
  Object {
    "detail": "Ember 3.12.0",
    "kind": 3,
    "label": "fn",
    "textEdit": Object {
      "newText": "fn",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "3.12.0",
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "hash",
    "textEdit": Object {
      "newText": "hash",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "has-block",
    "textEdit": Object {
      "newText": "has-block",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "has-block-params",
    "textEdit": Object {
      "newText": "has-block-params",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "if",
    "textEdit": Object {
      "newText": "if",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "loc",
    "textEdit": Object {
      "newText": "loc",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "mut",
    "textEdit": Object {
      "newText": "mut",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "query-params",
    "textEdit": Object {
      "newText": "query-params",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unbound",
    "textEdit": Object {
      "newText": "unbound",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unless",
    "textEdit": Object {
      "newText": "unless",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember 3.27.0",
    "kind": 3,
    "label": "helper",
    "textEdit": Object {
      "newText": "helper",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
      "MustachePath",
    ],
    "version": "3.27.0",
  },
  Object {
    "detail": "Ember 3.27.0",
    "kind": 3,
    "label": "modifier",
    "textEdit": Object {
      "newText": "modifier",
      "range": Object {
        "end": Object {
          "character": 8,
          "line": 0,
        },
        "start": Object {
          "character": 8,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
      "MustachePath",
      "ModifierPath",
    ],
    "version": "3.27.0",
  },
]
`;

exports[`integration async fs enabled: true Autocomplete works for broken templates autocomplete information for helper #5 {{name ( 2`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
  "helper": Object {
    "boo": Array [
      "app/helpers/boo.js",
    ],
  },
}
`;

exports[`integration async fs enabled: true Autocomplete works for broken templates autocomplete information for helper #6 {{name (foo ( 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/helpers/boo.js",
      ],
    },
    "detail": "helper",
    "kind": 3,
    "label": "boo",
    "textEdit": Object {
      "newText": "boo",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "action",
    "textEdit": Object {
      "newText": "action",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember 1.11.0",
    "kind": 3,
    "label": "component",
    "textEdit": Object {
      "newText": "component",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.11.0",
  },
  Object {
    "detail": "Ember 1.13.0",
    "kind": 3,
    "label": "concat",
    "textEdit": Object {
      "newText": "concat",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "1.13.0",
  },
  Object {
    "detail": "Ember 2.1.0",
    "kind": 3,
    "label": "get",
    "textEdit": Object {
      "newText": "get",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "2.1.0",
  },
  Object {
    "detail": "Ember 3.12.0",
    "kind": 3,
    "label": "fn",
    "textEdit": Object {
      "newText": "fn",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
    "version": "3.12.0",
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "hash",
    "textEdit": Object {
      "newText": "hash",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "has-block",
    "textEdit": Object {
      "newText": "has-block",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "has-block-params",
    "textEdit": Object {
      "newText": "has-block-params",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "if",
    "textEdit": Object {
      "newText": "if",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "loc",
    "textEdit": Object {
      "newText": "loc",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "mut",
    "textEdit": Object {
      "newText": "mut",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "query-params",
    "textEdit": Object {
      "newText": "query-params",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unbound",
    "textEdit": Object {
      "newText": "unbound",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "unless",
    "textEdit": Object {
      "newText": "unless",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "BlockPath",
      "MustachePath",
      "SubExpressionPath",
    ],
  },
  Object {
    "detail": "Ember 3.27.0",
    "kind": 3,
    "label": "helper",
    "textEdit": Object {
      "newText": "helper",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
      "MustachePath",
    ],
    "version": "3.27.0",
  },
  Object {
    "detail": "Ember 3.27.0",
    "kind": 3,
    "label": "modifier",
    "textEdit": Object {
      "newText": "modifier",
      "range": Object {
        "end": Object {
          "character": 13,
          "line": 0,
        },
        "start": Object {
          "character": 13,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "SubExpressionPath",
      "MustachePath",
      "ModifierPath",
    ],
    "version": "3.27.0",
  },
]
`;

exports[`integration async fs enabled: true Autocomplete works for broken templates autocomplete information for helper #6 {{name (foo ( 2`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello.hbs",
    ],
  },
  "helper": Object {
    "boo": Array [
      "app/helpers/boo.js",
    ],
  },
}
`;

exports[`integration async fs enabled: true Autocomplete works for broken templates autocomplete information for modifier #4 <Foo {{ 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
    "modifier": Object {
      "boo": Array [
        "app/modifiers/boo.js",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "Ember",
      "kind": 3,
      "label": "on",
      "textEdit": Object {
        "newText": "on",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
      "usableIn": Array [
        "ModifierPath",
      ],
    },
    Object {
      "detail": "Ember 3.27.0",
      "kind": 3,
      "label": "modifier",
      "textEdit": Object {
        "newText": "modifier",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
      "usableIn": Array [
        "SubExpressionPath",
        "MustachePath",
        "ModifierPath",
      ],
      "version": "3.27.0",
    },
    Object {
      "data": Object {
        "files": Array [
          "app/modifiers/boo.js",
        ],
      },
      "detail": "modifier",
      "kind": 3,
      "label": "boo",
      "textEdit": Object {
        "newText": "boo",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
    },
    Object {
      "detail": "modifier",
      "kind": 2,
      "label": "action",
      "textEdit": Object {
        "newText": "action",
        "range": Object {
          "end": Object {
            "character": 7,
            "line": 0,
          },
          "start": Object {
            "character": 7,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Autocomplete works in LinkTo components for @route argument able to autocomplete basic routes 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
    "routePath": Object {
      "foo.bar.baz": Array [
        "app/templates/foo/bar/baz.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "detail": "route",
      "kind": 17,
      "label": "foo.bar.baz",
      "textEdit": Object {
        "newText": "foo.bar.baz",
        "range": Object {
          "end": Object {
            "character": 16,
            "line": 0,
          },
          "start": Object {
            "character": 16,
            "line": 0,
          },
        },
      },
    },
  ],
}
`;

exports[`integration async fs enabled: true Diffent commands handle "els.getLegacyTemplateTokens" command 1`] = `
Object {
  "component": Object {
    "hello": Object {
      "source": "app/components/hello/index.hbs",
      "tokens": Array [
        "foo",
        "my-component",
        "another/my/component",
      ],
    },
  },
  "routePath": Object {},
}
`;

exports[`integration async fs enabled: true Diffent commands handle "els.getProjectRegistry" command 1`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello/index.hbs",
      "app/components/hello/index.js",
      "tests/integration/components/hello-test.js",
    ],
  },
}
`;

exports[`integration async fs enabled: true Diffent commands handle "els.getRelatedFiles" command 1`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello/component.js",
      "app/components/hello/template.hbs",
      "tests/integration/components/hello-test.js",
    ],
  },
}
`;

exports[`integration async fs enabled: true Diffent commands handle "els.getRelatedFiles" command 2`] = `
Array [
  "app/components/hello/component.js",
  "app/components/hello/template.hbs",
  "tests/integration/components/hello-test.js",
]
`;

exports[`integration async fs enabled: true Diffent commands handle "els.getRelatedFiles" command with meta flag 1`] = `
Object {
  "component": Object {
    "hello": Array [
      "app/components/hello/index.hbs",
      "app/components/hello/index.js",
      "tests/integration/components/hello-test.js",
    ],
  },
}
`;

exports[`integration async fs enabled: true Diffent commands handle "els.getRelatedFiles" command with meta flag 2`] = `
Array [
  Object {
    "meta": Object {
      "kind": "template",
      "name": "hello",
      "scope": "application",
      "type": "component",
    },
    "path": "app/components/hello/index.hbs",
  },
  Object {
    "meta": Object {
      "kind": "script",
      "name": "hello",
      "scope": "application",
      "type": "component",
    },
    "path": "app/components/hello/index.js",
  },
  Object {
    "meta": Object {
      "kind": "test",
      "name": "hello",
      "scope": "application",
      "type": "component",
    },
    "path": "tests/integration/components/hello-test.js",
  },
]
`;

exports[`integration async fs enabled: true DocumentSymbolProvider able to provide symbols for script document 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.js",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration async fs enabled: true DocumentSymbolProvider able to provide symbols for template document 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration async fs enabled: true DocumentSymbolProvider stable if ast broken in script document 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.js",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration async fs enabled: true DocumentSymbolProvider stable if ast broken in template document 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases go to component from typescripted inline template 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/templates/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.ts",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/components/darling.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases go to definition from app to in repo addon 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "biz",
      "root": "lib/biz",
      "version": 1,
    },
  ],
  "registry": Object {
    "component": Object {
      "bar": Array [
        "lib/biz/addon/components/bar.js",
      ],
      "darling": Array [
        "app/components/darling/index.js",
      ],
      "hello": Array [
        "app/components/hello.js",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/lib/biz/addon/components/bar.js",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases go to definition from app to nested utils location of in repo addon 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "biz",
      "root": "lib/biz",
      "version": 1,
    },
  ],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling/index.js",
      ],
      "hello": Array [
        "app/components/hello.js",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/lib/biz/addon/utils/boo/blah/zoo/bar.js",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases go to definition from handlebars template working if we have test for component 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.ts",
        "tests/integration/components/darling/component-test.js",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling.ts",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases go to definition from script template working if we have test for component 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.ts",
        "tests/integration/components/darling/component-test.js",
      ],
      "hello": Array [
        "app/components/hello.ts",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling.ts",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases go to local template-only component 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases go to local template-only component in module 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling/index.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling/index.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases go to local template-only component in pod-like 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/components/darling/template.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/components/darling/template.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases go to local template-only component in templates dir 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "darling": Array [
        "app/templates/components/darling.hbs",
      ],
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/components/darling.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases go to route definition from LinkTo component 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "component": Object {
      "hello": Array [
        "app/components/hello.hbs",
      ],
    },
    "routePath": Object {
      "foo.bar.baz": Array [
        "app/templates/foo/bar/baz.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo/bar/baz.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases to children route from application outlet 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "routePath": Object {
      "application": Array [
        "app/templates/application.hbs",
      ],
      "foo": Array [
        "app/templates/foo.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Go to definition works for all supported cases to children route from meaningful outlet 1`] = `
Object {
  "addonsMeta": Array [],
  "registry": Object {
    "routePath": Object {
      "foo": Array [
        "app/templates/foo.hbs",
      ],
      "foo.bar": Array [
        "app/templates/foo/bar.hbs",
      ],
      "foo.baz": Array [
        "app/templates/foo/baz.hbs",
      ],
      "foo.boo.bax": Array [
        "app/templates/foo/boo/bax.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo/bar.hbs",
    },
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/app/templates/foo/baz.hbs",
    },
  ],
}
`;

exports[`integration async fs enabled: true Initialize request returns an initialize request 1`] = `
Object {
  "capabilities": Object {
    "codeActionProvider": true,
    "completionProvider": Object {
      "resolveProvider": true,
      "triggerCharacters": Array [
        ".",
        ":",
        "$",
        "=",
        "/",
        "{",
        "(",
        "<",
        "@",
        "\\"",
        "'",
        "#",
      ],
    },
    "definitionProvider": true,
    "documentSymbolProvider": true,
    "executeCommandProvider": Object {
      "commands": Array [
        "els.registerProjectPath",
        "els.provideDiagnostics",
        "els.extractSourceCodeToComponent",
        "els.executeInEmberCLI",
        "els.getRelatedFiles",
        "els.getKindUsages",
        "els.setConfig",
        "els.reloadProject",
      ],
    },
    "foldingRangeProvider": true,
    "hoverProvider": true,
    "referencesProvider": true,
    "textDocumentSync": 1,
    "workspace": Object {
      "workspaceFolders": Object {
        "changeNotifications": true,
        "supported": true,
      },
    },
  },
  "serverInfo": Object {
    "name": "@ember-tooling/ember-language-server",
  },
}
`;

exports[`integration async fs enabled: true Project class resolution, based on fs path and file structure support parent project addon calling child project 1`] = `
Object {
  "addonsMeta": Array [
    Object {
      "name": "biz",
      "root": "lib/biz",
      "version": 1,
    },
    Object {
      "name": "foo",
      "root": "../lib/foo",
      "version": 1,
    },
  ],
  "registry": Object {
    "component": Object {
      "bar": Array [
        "lib/biz/addon/components/bar.js",
        "../lib/foo/addon/components/bar.js",
      ],
    },
    "helper": Object {
      "blah": Array [
        "tests/helpers/blah.js",
      ],
    },
    "routePath": Object {
      "hello": Array [
        "app/templates/hello.hbs",
      ],
    },
  },
  "response": Array [
    Object {
      "range": Object {
        "end": Object {
          "character": 0,
          "line": 0,
        },
        "start": Object {
          "character": 0,
          "line": 0,
        },
      },
      "uri": "/tests/helpers/blah.js",
    },
  ],
}
`;

exports[`integration async fs enabled: true Project class resolution, based on fs path and file structure without ignoring main project returns one only top level result 1`] = `
Array [
  Object {
    "addonsMeta": Array [],
    "registry": Object {
      "component": Object {
        "item": Array [
          "addon/components/item.hbs",
        ],
      },
    },
    "response": Array [
      Object {
        "data": Object {
          "files": Array [
            "../addon/components/item.hbs",
          ],
        },
        "detail": "component",
        "kind": 7,
        "label": "Item",
        "textEdit": Object {
          "newText": "Item",
          "range": Object {
            "end": Object {
              "character": 1,
              "line": 0,
            },
            "start": Object {
              "character": 1,
              "line": 0,
            },
          },
        },
      },
    ],
  },
  Object {
    "addonsMeta": Array [
      Object {
        "name": "my-addon",
        "root": "../lib",
        "version": 1,
      },
    ],
    "registry": Object {
      "component": Object {
        "bar": Array [
          "app/components/bar.hbs",
        ],
        "foo": Array [
          "app/components/foo.hbs",
        ],
        "item": Array [
          "../lib/addon/components/item.hbs",
        ],
      },
    },
    "response": Array [
      Object {
        "data": Object {
          "files": Array [
            "../addon/components/item.hbs",
          ],
        },
        "detail": "component",
        "kind": 7,
        "label": "Item",
        "textEdit": Object {
          "newText": "Item",
          "range": Object {
            "end": Object {
              "character": 1,
              "line": 0,
            },
            "start": Object {
              "character": 1,
              "line": 0,
            },
          },
        },
      },
    ],
  },
]
`;

exports[`integration async fs enabled: true Special helpers autocomplete autocomplete component in subExpression 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/components/foo.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "foo",
    "textEdit": Object {
      "newText": "foo",
      "range": Object {
        "end": Object {
          "character": 20,
          "line": 0,
        },
        "start": Object {
          "character": 20,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: true Special helpers autocomplete autocomplete helpers in subExpression 1`] = `
Array [
  Object {
    "data": Object {
      "files": Array [
        "app/helpers/my-helper.js",
      ],
    },
    "detail": "helper",
    "kind": 3,
    "label": "my-helper",
    "textEdit": Object {
      "newText": "my-helper",
      "range": Object {
        "end": Object {
          "character": 17,
          "line": 0,
        },
        "start": Object {
          "character": 17,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: true Special helpers autocomplete autocomplete modifier in subExpression 1`] = `
Array [
  Object {
    "detail": "Ember",
    "kind": 3,
    "label": "on",
    "textEdit": Object {
      "newText": "on",
      "range": Object {
        "end": Object {
          "character": 19,
          "line": 0,
        },
        "start": Object {
          "character": 19,
          "line": 0,
        },
      },
    },
    "usableIn": Array [
      "ModifierPath",
    ],
  },
  Object {
    "detail": "modifier",
    "kind": 2,
    "label": "action",
    "textEdit": Object {
      "newText": "action",
      "range": Object {
        "end": Object {
          "character": 19,
          "line": 0,
        },
        "start": Object {
          "character": 19,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: true autocomplete includes yielded blocks in angle component completions 1`] = `
Array [
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":main",
    "textEdit": Object {
      "newText": ":main",
      "range": Object {
        "end": Object {
          "character": 10,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "data": Object {
      "files": Array [
        "app/components/hello.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "Hello",
    "textEdit": Object {
      "newText": "Hello",
      "range": Object {
        "end": Object {
          "character": 10,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "data": Object {
      "files": Array [
        "app/components/darling.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "Darling",
    "textEdit": Object {
      "newText": "Darling",
      "range": Object {
        "end": Object {
          "character": 10,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "data": Object {
      "files": Array [
        "app/components/world.hbs",
      ],
    },
    "detail": "component",
    "kind": 7,
    "label": "World",
    "textEdit": Object {
      "newText": "World",
      "range": Object {
        "end": Object {
          "character": 10,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: true autocomplete works for angle component yielded blocks 1`] = `
Array [
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":main",
    "textEdit": Object {
      "newText": ":main",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
]
`;

exports[`integration async fs enabled: true autocomplete works for multiple angle component yielded blocks 1`] = `
Array [
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":main",
    "textEdit": Object {
      "newText": ":main",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":body",
    "textEdit": Object {
      "newText": ":body",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
  Object {
    "detail": "Named block (Slot) for <Darling>",
    "kind": 6,
    "label": ":footer",
    "textEdit": Object {
      "newText": ":footer",
      "range": Object {
        "end": Object {
          "character": 11,
          "line": 0,
        },
        "start": Object {
          "character": 10,
          "line": 0,
        },
      },
    },
  },
]
`;
